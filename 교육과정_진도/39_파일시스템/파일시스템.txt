## 파일시스템

# 사전지식
- 파일을 사용자가 쉽게 접근할 수 있도록 운영체제가 시스템의 디스크를 보관 
- 종류
(1) ext4	: 대용량 파일 지원
(2) xfs	: 입출력, 확장성이 좋음	


# 스왑 
- RAM이 가득찰 경우(메모리) 프로그램을 메모리에 불러오지 못할 경우,
데이터, 프로그램을 디스크로 옮김
- 디스크 상 공간을 스왑공간이라 한다


# LVM 
- 논리볼륨을 통해, 리눅스 저장공간을 효율적으로 관리가능한 기능
- 1.5G의 물리디스크 두개를 가상디스크로 만들어 하나의 3G 디스크로 만들거나,
1G, 2G의 가상디스크로 사용할 수 있게된다
- 기존 디스크의 용량을 확장해야할 때, 서버를 정지하고 디스크를 추가하는 작업이 아닌,
다른 디스크에 남는 용량을 필요한 디스크에 추가할 수 있다는 장점이 있다


# LVM 과정
1. 물리디스크 생성		
			(1) 생성 : 가상머신 일시정지 후, editor에서 물리디스크 추가(sata)
			(2) 디스크 조회 : fdisk -l | more
			- 물리디스크명 조회 가능
2. 파티션(LVM옵션 설정)	
			- 파티션 하는 이유 : 디스크 간 공간을 나눠 각 공간 사용이 다른 공간 사용을 간섭하지 않기 위함
			(1) 파티션 테이블 접속 :  fdisk /dev/확인한 물리디스크명
			- p	: 현재 존재하는 물리디스크와 파티션 현황 확인가능 *
			- d	: 파티션 삭제
			- n	: 새로운 파티션 생성
				- p, e	: 기본파티션 / 확장파티션 추가
				- 1 ~ 4	: 파티션 번호 생성
				- 파티션 용량 설정 : 디스크 내 용량 설정이 가능
				- t 8e	: 파티션 lvm 타입설정

3. 물리볼륨 생성(PV)	
			(1) 생성 : pvcreate /dev/파티션명
			- 파티션명으로 볼륨그룹을 생성
			(2) 조회 : pvs
4. 볼륨그룹 등록(VG)
			(1) 생성 : vgcreate 볼륨그룹명 /dev/파티션명1 /dev/파티션명2
			- 볼룸그룹명을 임의로 지어줘야한다 *
			- 볼륨그룹으로 여러개의 디스크를 하나의 물리디스크로 만듬
			(2) 조회 : vgs
			- 삭제 : vgremove /dev/그룹명 *
5. 논리볼륨 생성(LG)
			(1) lvcreate -L 용량(G,M) -n 논리볼륨명 볼륨그룹	
			- 논리볼룸도 임의의 논리볼룸명을 만들어줘야한다 * (새로운 디스크명이라 생각)
			- 볼룸 그룹을 내가 원하는 대로 LG로 쪼개서 사용한다
			(2) lvs	: 조회
			- lvcreate -l 100%FREE -n lv_oracle1 vg1
6. 파일시스템 생성
			(1) 파일시스템 생성 : mkfs.xfs4 /dev/볼룸그룹명/논리볼룸명
			- 파일시스템 삭제 : lvremove + /dev/볼룸명/논리볼룸명
			(2) 조회 : cat /dev/볼룸그룹명
			- 생성된 파일시스템은 /dev 안에 위치해 있다 *
7. 마운트(+ 자동마운트)
			(1) 마운트될 cd 디렉터리 만들기 : mkdir /디렉터리명
			(2) 마운트	: mount /파일시스템 /디렉터리명
			(3) 마운트 확인 : df -Th
			- 마운트된 파일시스템만 조회 가능 *










	
